package com.pta.entities;
// Generated Mar 29, 2024, 8:12:15â€¯PM by Hibernate Tools 4.3.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.springframework.format.annotation.DateTimeFormat;

import jakarta.persistence.*;


/**
 * Developer generated by hbm2java
 */
@Entity
@Table(name = "developer")
public class Developer implements java.io.Serializable {

	private Integer id;
	private String name;
	private int status;
	
	@DateTimeFormat(pattern = "dd/MM/yyyy HH:mm")
	private Date createdTime;
	@DateTimeFormat(pattern = "dd/MM/yyyy HH:mm")
	private Date updatedTime;
	
	private Set<Product> products = new HashSet<Product>(0);

	public Developer() {
	}

	public Developer(String name, int status, Date createdTime) {
		this.name = name;
		this.status = status;
		this.createdTime = createdTime;
	}

	public Developer(String name, int status, Date createdTime, Date updatedTime, Set<Product> products) {
		this.name = name;
		this.status = status;
		this.createdTime = createdTime;
		this.updatedTime = updatedTime;
		this.products = products;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", nullable = false, length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "status", nullable = false, length = 11)
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_time", nullable = false, length = 19)
	public Date getCreatedTime() {
		return this.createdTime;
	}

	public void setCreatedTime(Date createdTime) {
		this.createdTime = createdTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_time", length = 19)
	public Date getUpdatedTime() {
		return this.updatedTime;
	}

	public void setUpdatedTime(Date updatedTime) {
		this.updatedTime = updatedTime;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "developer")
	public Set<Product> getProducts() {
		return this.products;
	}

	public void setProducts(Set<Product> products) {
		this.products = products;
	}

}
